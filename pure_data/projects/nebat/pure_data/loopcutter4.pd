#N canvas 377 134 711 625 10;
#X obj 358 79 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 220 22 758 740 c_guts 1;
#X obj 83 239 pack f f f;
#X obj 83 264 outlet;
#X obj 25 39 inlet;
#X text 49 657 Loop Start \, Loop End \, Duration;
#X text 49 675 [Jump to value \, Destination Value \, Duration];
#X text 23 19 bang;
#X text 313 27 slices;
#X text 81 286 list;
#X text 364 27 pitch;
#X text 311 12 INT;
#X obj 172 268 outlet;
#N canvas 182 352 450 300 c_env 0;
#X obj 185 89 del;
#X obj 151 32 inlet;
#X obj 203 31 inlet;
#X obj 152 151 outlet;
#X msg 152 117 1 2;
#X msg 185 115 0 2;
#X obj 203 65 - 2;
#X text 67 200 Ramp to 1 in 2 ms and ramp down to 0 in 2 ms;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 0 1;
#X restore 172 193 pd c_env;
#X text 169 285 list;
#X text 73 303 PLAYBACK;
#X text 168 305 ENVELOPE;
#X obj 173 38 inlet;
#X text 172 18 parameters;
#X text 120 436 which part of the sample;
#X text 120 454 play at a slightly faster of slower rate;
#X text 120 472 how quickly the slice will end before next drum hiits
audible;
#X text 120 507 The amount of glitch to apply to the sample;
#X text 51 506 RETRIGGER;
#X text 51 471 DURATION;
#X text 51 454 PITCH;
#X text 51 437 SLICE;
#X text 142 554 Works out the sample start end points;
#X text 144 578 Works out the speed to read through slice;
#N canvas 452 390 632 290 loopPoints 0;
#X obj 44 157 * 1;
#X obj 97 184 + 1;
#X obj 44 84 t f b;
#X obj 44 215 outlet;
#X obj 97 215 outlet;
#X obj 44 55 inlet;
#X obj 157 53 inlet;
#X text 44 31 0-127;
#X text 44 236 Start;
#X text 94 235 End;
#X text 147 30 No. Slices;
#X obj 44 120 % 8;
#X text 231 48 This object takes the number of slices as a controlled
parameter and any number as input.;
#X text 231 122 The legth of the audio loop is divided by the number
of slices. So that you have access to the length of one slice in samples.
;
#X text 232 84 It works out the sample start and end point for sample
playback.;
#X text 229 176 This is then multiplied by the input number \, this
is the start point.;
#X text 228 211 To get the end point for the loop the length of one
slice is added to the start point.;
#N canvas 639 280 448 352 slice 0;
#X obj 88 44 inlet;
#X obj 88 157 f;
#X obj 88 185 outlet;
#X obj 103 127 / 1;
#X obj 128 68 t b f;
#X obj 128 44 inlet;
#X text 82 24 bang;
#X text 226 95 total samples;
#X text 126 26 slice;
#X text 85 208 samples;
#X obj 103 96 r \$0-cutter_samples;
#X text 45 251 the size of once slice when the length of the audio
loop is divided by the number of slices;
#X text 130 128 divide by number of slices;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 4 0;
#X connect 10 0 3 0;
#X restore 112 132 pd slice;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 11 0;
#X connect 2 1 17 0;
#X connect 5 0 2 0;
#X connect 6 0 17 1;
#X connect 6 0 11 1;
#X connect 11 0 0 0;
#X connect 17 0 0 1;
#X connect 17 0 1 1;
#X restore 36 197 pd loopPoints;
#X obj 25 63 t b f b b;
#N canvas 627 209 496 432 sliceDuration 0;
#X obj 253 -124 t b f;
#X obj 136 -122 traninfo;
#X obj 194 12 * 1;
#X obj 166 74 - 0;
#X obj 194 37 t b f;
#X obj 209 -12 / 127;
#X obj 166 -64 / 1;
#X obj 194 -149 inlet;
#X text 193 -169 Pitch;
#X text 192 -184 0-127;
#X obj 253 -150 inlet;
#X obj 166 126 outlet;
#X text 252 -171 Slices;
#X text 250 -186 4 \, 8 \, 16 \, 32;
#X text 22 -122 length of one bar;
#X text 249 -37 double the speed of one slice;
#X text 248 -13 divide by the maximum pitch;
#X text 250 8 multiply by desired pitch;
#X text 246 77 minus the actual length of one slice;
#X text 30 162 This sub patch returns the amount of milliseconds a
slice is at desired pitch which is between its normal stretched length
and double its stretched length;
#X text 30 213 make the breaks sing!;
#X obj 209 -35 * 0.25;
#X connect 0 0 6 0;
#X connect 0 1 6 1;
#X connect 1 2 6 0;
#X connect 2 0 4 0;
#X connect 3 0 11 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 2 1;
#X connect 6 0 3 0;
#X connect 6 0 21 0;
#X connect 7 0 2 0;
#X connect 10 0 0 0;
#X connect 21 0 5 0;
#X restore 195 111 pd sliceDuration;
#X text 49 611 work out the length of the slice from the global transport
;
#X text 49 635 work out the distance from this value and double that
value;
#X text 49 701 gradually minus the first value by the second value
;
#X obj 173 63 unpack f f;
#X obj 170 157 f;
#X text 362 10 0-127;
#X connect 0 0 1 0;
#X connect 2 0 28 0;
#X connect 11 0 10 0;
#X connect 15 0 33 0;
#X connect 27 0 0 0;
#X connect 27 1 0 1;
#X connect 28 0 11 0;
#X connect 28 1 27 0;
#X connect 28 3 34 0;
#X connect 29 0 34 1;
#X connect 33 0 29 1;
#X connect 33 0 27 1;
#X connect 33 1 29 0;
#X connect 34 0 0 2;
#X connect 34 0 11 1;
#X restore 45 385 pd c_guts;
#X text 203 102 pitch;
#X obj 240 79 hradio 15 1 0 4 empty empty empty 0 -8 0 10 -262144 -1
-1 1;
#X text 204 76 slice;
#X text 315 431 This abstraction takes a value between 0 - 127 and
outputs a slice of a sample. This relies on [transport] as the samples
are stretched to the tempo.;
#X text 315 400 The beat slicer! this loads in sample loops \, cuts
them up and spits them back out.;
#X text 327 77 loop;
#N canvas 357 22 460 494 sample 0;
#X obj 27 40 playlist all 200 200 {Courier 12 normal} #457782 yellow
black red;
#X obj 27 -15 prepend seek;
#X obj 27 -61 inlet;
#X obj 27 255 outlet;
#X obj 106 -38 loadbang;
#X msg 106 -15 location /Users/dapoulter/desktop/dpsamples/break;
#X obj 27 -38 random 18;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X restore 389 94 pd sample;
#X text 314 238 Adjust the incoming data to fit with the number of
slices.;
#X text 314 255 Only pass this data if it falls on beat (transport)
;
#X text 314 272 Retrieve the parameters;
#X text 314 289 send everything into the guts;
#X text 314 306 The duration of the slice is first calculated;
#X text 314 323 Followed by the length;
#X text 314 340 An envelope is applied;
#X text 314 357 The sound is played back;
#X text 314 221 METHOD;
#X obj 389 170 table \$0-cutter;
#X obj 358 34 loadbang;
#N canvas 282 139 450 300 generic 0;
#X obj 40 217 soundfiler;
#X msg 40 47 read -resize \$1;
#X obj 79 118 f \$0;
#X msg 79 167 \$1-\$2;
#X obj 79 94 t b b;
#X obj 79 143 pack f s;
#X obj 40 192 zl join;
#X obj 40 241 outlet;
#X obj 40 23 inlet;
#X obj 124 118 symbol cutter;
#X obj 79 72 loadbang;
#X text 225 30 read to the generic array;
#X connect 0 0 7 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 6 1;
#X connect 4 0 2 0;
#X connect 4 1 9 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 5 1;
#X connect 10 0 4 0;
#X restore 389 120 pd generic;
#N canvas 558 148 450 300 player 0;
#X obj 16 120 tabread4~ \$0-cutter;
#X obj 147 169 *~;
#X obj 154 196 outlet~;
#X obj 39 28 inlet;
#X obj 178 49 inlet;
#X obj 39 82 vline~;
#X msg 39 57 \$1 \, \$2 \$3;
#X obj 181 76 line~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 6 0;
#X connect 4 0 7 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 1 1;
#X restore 45 414 pd player;
#X text 317 539 Plays the sample and envelopes the chunk;
#X text 317 510 Creates the lists for sample playback and envelope
;
#X obj 389 145 s \$0-cutter_samples;
#X text 515 94 Pick sample;
#X text 515 118 Read to array;
#X text 516 171 Array;
#X text 515 144 Send length in samples;
#X obj 243 102 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 12700 1;
#N canvas 342 142 317 237 c_sli 0;
#X obj 61 72 tranposition;
#X obj 36 103 switch 4;
#X obj 36 73 + 1;
#X obj 36 37 inlet;
#X obj 36 164 outlet;
#X obj 151 162 outlet;
#X obj 151 54 sel 0 1 2 3;
#X obj 151 81 f 4;
#X obj 178 81 f 8;
#X obj 204 81 f 16;
#X obj 237 81 f 32;
#X text 34 184 position;
#X text 148 183 slice size;
#X text 34 16 slice;
#X obj 36 130 t b;
#X connect 0 2 1 1;
#X connect 0 3 1 2;
#X connect 0 4 1 3;
#X connect 0 5 1 4;
#X connect 1 0 14 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 3 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 6 2 9 0;
#X connect 6 3 10 0;
#X connect 7 0 5 0;
#X connect 8 0 5 0;
#X connect 9 0 5 0;
#X connect 10 0 5 0;
#X connect 14 0 4 0;
#X restore 135 94 pd c_sli;
#X obj 45 236 t f b;
#X obj 156 342 pack;
#X obj 132 284 f;
#X obj 36 16 transport;
#X obj 41 87 tranlength;
#X obj 34 445 dac~;
#X obj 43 115 sel 0 2;
#X obj 168 176 decide2;
#X obj 189 214 sel 1 0;
#X obj 208 277 f 0;
#X obj 51 163 random 8;
#X msg 147 231 8;
#X obj 240 277 f 96;
#X connect 0 0 8 0;
#X connect 1 0 21 0;
#X connect 1 1 21 1;
#X connect 3 0 30 0;
#X connect 8 0 20 0;
#X connect 19 0 0 0;
#X connect 20 0 24 0;
#X connect 21 0 36 1;
#X connect 21 0 36 0;
#X connect 29 0 38 1;
#X connect 31 0 1 0;
#X connect 31 1 33 0;
#X connect 32 0 1 1;
#X connect 33 0 32 0;
#X connect 35 5 37 0;
#X connect 37 0 38 0;
#X connect 37 0 41 0;
#X connect 37 1 38 0;
#X connect 37 1 41 0;
#X connect 38 0 39 0;
#X connect 39 0 43 0;
#X connect 39 1 40 0;
#X connect 40 0 32 1;
#X connect 41 0 31 0;
#X connect 42 0 33 1;
#X connect 43 0 32 1;
#X coords 0 -1 1 1 188 50 2 195 75;
